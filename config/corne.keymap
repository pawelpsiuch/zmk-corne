/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        lock_mac: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT_COMMAND) &kp LEFT_CONTROL &kp Q>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lock_mac  &kp Q               &kp W           &kp E               &kp R             &kp T          &kp Y        &kp U              &kp I                &kp O            &kp P                       &none
&none      &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G          &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL ASTERISK  &none
&none      &kp Z               &kp X           &kp C               &kp V             &kp B          &kp N        &kp M              &kp COMMA            &kp DOT          &kp SLASH                   &none
                                               &mt LEFT_GUI TAB    &kp BACKSPACE     &lt 1 SPACE    &lt 2 ENTER  &lt 3 DELETE       &lt 4 ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7     &kp N8         &kp N9    &kp N0         &none
&none  &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT     &none        &none         &kp RSHFT  &kp RGUI       &kp RALT  &kp RCTRL      &trans
&none  &kp GRAVE     &none         &none         &none         &none        &none         &none      &kp SEMICOLON  &kp SQT   &kp BACKSLASH  &trans
                                   &kp LGUI      &trans        &kp SPACE    &kp RET       &trans     &kp RALT
            >;
        };

        numpad_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp PLUS   &none
&none       &none         &trans        &trans        &trans        &trans          &kp SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &none
&none       &trans        &trans        &trans        &trans        &trans          &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &none
                                        &none         &trans        &kp SPACE       &none         &trans        &none
            >;
        };

        arrow_3 {
            bindings = <
&none   &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp UP_ARROW    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans          &trans     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp F1    &kp F2                &kp F3                &kp F4             &kp F5               &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans
&trans  &kp CAPS  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_DOWN    &trans  &trans  &trans  &kp F11  &kp F12  &trans
&trans  &trans    &trans                &trans                &trans             &trans               &trans  &trans  &trans  &trans   &trans   &trans
                                        &trans                &trans             &trans               &trans  &trans  &trans
            >;
        };
    };
};
